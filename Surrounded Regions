// Graph question on Surround regions replace 'O' with 'X'.
class Solution {
public:

void dfs(int row,int col,vector<vector<char>> &board,vector<vector<int>> &vis,int delrow[],int delcol[])
{
    vis[row][col]=1;
    // traversing the whole matrix with zeros
     int n=board.size();
     int m=board[0].size();
    for(int k=0;k<4;k++){
        int newrow=delrow[k]+row;
        int newcol=delcol[k]+col;
        if(newrow>=0 && newrow<n && newcol>=0 && newcol<m && !vis[newrow][newcol] && board[newrow][newcol]=='O'){
            dfs(newrow,newcol,board,vis,delrow,delcol);
        }
    }
}
    void solve(vector<vector<char>>& board) {
        int n=board.size();
        int m=board[0].size();
        int delrow[4]={-1,0,1,0};
        int delcol[4]={0,1,0,-1};
        vector<vector<int>> vis(n,vector<int> (m,0));
        for(int j=0;j<m;j++){
            //first row to check with O
            if(!vis[0][j] && board[0][j]=='O'){
                dfs(0,j,board,vis,delrow,delcol);
            }
            //last row to check with O
             if(!vis[n-1][j] && board[n-1][j]=='O'){
                dfs(n-1,j,board,vis,delrow,delcol);
            }
        }
        
        for(int i=0;i<n;i++){
            //first row to check with O
            if(!vis[i][0] && board[i][0]=='O'){
                dfs(i,0,board,vis,delrow,delcol);
            }
            //last row to check with O
             if(!vis[i][m-1] && board[i][m-1]=='O'){
                dfs(i,m-1,board,vis,delrow,delcol);
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && board[i][j]=='O'){
                    board[i][j]='X';
                }
            }
        }
    }
};
